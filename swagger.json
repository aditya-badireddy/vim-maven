{
    "swagger": "2.0",
    "info": {
        "description": "Swagger for VIM",
        "version": "1.0.0",
        "title": "Vehicle Inventory Management",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "http://localhost:3333",
    "basePath": "/vim-maven",
    "tags": [
        {
            "name": "user",
            "description": "For users",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/users/updateUser/{userName}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "description": "",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {}
                ]
            }
        },
        "/api/users/": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Finds all users",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findAllUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {}
                ]
            }
        },
        "/api/users/{userName}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Find user by User Name",
                "description": "Returns a single user",
                "operationId": "getUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "User Name of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {}
                ]
            }
        },
        "definitions": {
            "user": {
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "integer"
                    },
                    "firstName": {
                        "type": "integer"
                    },
                    "lastName": {
                        "type": "integer"
                    },
                    "dob": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender",
                        "enum": [
                            "M",
                            "F",
                            "O"
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "updTsp": {
                        "type": "string"
                    }
                }
            }
        },
        "externalDocs": {
            "description": "Find out more about Swagger",
            "url": "http://swagger.io"
        }
    }
}